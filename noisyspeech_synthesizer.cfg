# sampling_rate: Saampling frequency
# audioformat: extension
# audio_length: Audio file length, ex) 30 seconds
# silence_length: (Default) It fills 0.2% of the quiet sound in the space where the file length is short.
# total_hours: 40
# snr_lower: snr_lower < learning snr < snr_upper
# snr_upper: snr_lower < learning snr < snr_upper
# randomize_snr: (Defulat) SNR is not fixed and is randomly generated.
# target_level_lower: (Default) When synthesizing noisy, it prevents clipping.
# target_level_upper: (Default) When synthesizing noisy, it prevents clipping.
# total_snrlevels: (Default) Parameters not used here
# clean_activity_threshold: (Default) No impact on learning.. you can try it.
# noise_activity_threshold: (Default) No impact on learning.. you can try it.
# fileindex_start: (Default)
# fileindex_end: (Default)
# is_test_set: (Default) True if test set, false otherwise
# noise_dir: (input) Learning noise directory
# speech_dir: (input) Learning clean directory
# destination: (output) Data generation directory
# log_dir: (Default) No impact on learning.. you can try it.
# snr_test: (Default) No impact on learning.. you can try it.
# norm_test: (Default) No impact on learning.. you can try it.
# sampling_rate_test : (Default) No impact on learning.. you can try it.
# clipping_test : (Default) No impact on learning.. you can try it.
# unit_tests_log_dir: (Default) No impact on learning.. you can try it.
# split_dir: (output) Data generation directory
# norm_stft : Whether to normalize or not, it is better not to do it for some reason (model optimization), no significant impact on performanc.
# model_dir : (output) model storage directory , '\' Must be attached at the end (if not, modify the code...)
# model_load_true : Before learning, whether to fill in the initial values of the weigths(weight, bias) value or not, 1 if filled, 0 if not filled.
# model_load_name : Enter the model path, which model to fill with weights values
# dtln_ref_01: dnsmos select model path to measure
[noisy_speech]
#noisyspeech_synthesizer_multiprocessing.py
sampling_rate: 16000
audioformat: *.wav
audio_length: 15
silence_length: 0.2
total_hours : 500
snr_lower: -5
snr_upper: 25
randomize_snr: True
target_level_lower: -35
target_level_upper: -15
total_snrlevels: 31
clean_activity_threshold: 0.6
noise_activity_threshold: 0.0
fileindex_start: None
fileindex_end: None
is_test_set: False
noise_dir: /datas/audio/dataset/foreign/DNS-Challenge_2020(breizhn)/datasets/noisy
speech_dir: /datas/audio/dataset/foreign/DNS-Challenge_2020(breizhn)/datasets/clean_selected/clean
destination: /datas/audio/dataset/foreign/DNS-Challenge_2020(breizhn)/synthesis/test
log_dir: ./logs
# Unit tests config
snr_test: True
norm_test: True
sampling_rate_test = True
clipping_test = True
unit_tests_log_dir: .\unittests_logs

# split_dns_corpus.py
split_dir: /datas/audio/dataset/foreign/DNS-Challenge_2020(breizhn)/synthesis/test
# run_training.py // caution !!!! model_dir : pwd + \
norm_stft : False
model_dir : /datas/audio/dataset/foreign/DNS-Challenge_2020(breizhn)/model/
model_load_true : 0
model_load_name : /home/kwkim/emt_dtln/generator/07_DTLN/pretrained_model/model.h5
target_input : model_name
